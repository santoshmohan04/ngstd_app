{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/edit-student/edit-student.component.ts","./src/app/edit-student/edit-student.component.html","./src/app/student-list/student-list.component.html","./src/app/student-list/student-list.component.ts","./src/app/add-student/add-student.component.ts","./src/app/add-student/add-student.component.html","./src/app/shared/crud.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyCwXfpaHvKX_saY8CQUw-hVHeiguFEtKSU\",\n    authDomain: \"pick-and-pack-102af.firebaseapp.com\",\n    databaseURL: \"https://pick-and-pack-102af.firebaseio.com\",\n    projectId: \"pick-and-pack-102af\",\n    storageBucket: \"pick-and-pack-102af.appspot.com\",\n    messagingSenderId: \"162417798881\",\n    appId: \"1:162417798881:web:bc8a6ee690b9d2edeb51a0\",\n    measurementId: \"G-J3G9BYZ205\"\n  }\n};","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angularfirebase-student-app';\n}\n","<!-- Top navigation -->\n<nav class=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n  <a class=\"navbar-brand col-sm-3 col-md-2 mr-0\" routerLink=\"/register-student\">\n    <span class=\"dasboard-text\">Dashboard</span>\n  </a>\n  <ul class=\"navbar-nav px-3\">\n    <li class=\"nav-item text-nowrap\">\n      <a class=\"nav-link\" routerLink=\"/register-student\">\n        <span class=\"user-image\" style=\"background-image: url('assets/user.jpg')\"></span>\n        Hello Admin\n      </a>\n    </li>\n  </ul>\n</nav>\n\n<!-- Sidebar navigation -->\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <nav class=\"col-md-2 d-md-block bg-light sidebar\">\n      <div class=\"sidebar-sticky\">\n        <ul class=\"nav flex-column\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/register-student\" routerLinkActive=\"active\">\n              Add Student\n            </a>\n          </li>\n\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/view-students\" routerLinkActive=\"active\">\n              Students List\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n\n    <!-- Main content -->\n    <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n      <div class=\"inner-adjust\">\n        <router-outlet></router-outlet>\n      </div>\n    </main>\n\n  </div>\n</div>\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { AddStudentComponent } from './add-student/add-student.component';\nimport { EditStudentComponent } from './edit-student/edit-student.component';\nimport { StudentListComponent } from './student-list/student-list.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\n// Import Firebase modules + environment\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { environment } from '../environments/environment';\n\n// Toastr module\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\n// Pagination module\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddStudentComponent,\n    EditStudentComponent,\n    StudentListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    ReactiveFormsModule,\n    NgxPaginationModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class AppModule { }\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CrudService } from '../shared/crud.service';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Location } from '@angular/common';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-edit-student',\n  templateUrl: './edit-student.component.html',\n  styleUrls: ['./edit-student.component.scss']\n})\n\nexport class EditStudentComponent implements OnInit {\n  editForm: FormGroup;\n  \n  constructor(\n    private crudApi: CrudService,\n    private fb: FormBuilder,\n    private location: Location,\n    private actRoute: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n  ){ }\n\n  ngOnInit() {\n    this.updateStudentData();\n    const id = this.actRoute.snapshot.paramMap.get('id');\n    this.crudApi.GetStudent(id).valueChanges().subscribe(data => {\n      this.editForm.setValue(data)\n    })\n  }\n\n  get firstName() {\n    return this.editForm.get('firstName');\n  }\n\n  get lastName() {\n    return this.editForm.get('lastName');\n  }\n\n  get email() {\n    return this.editForm.get('email');\n  }\n\n  get mobileNumber() {\n    return this.editForm.get('mobileNumber');\n  }  \n\n  updateStudentData() {\n    this.editForm = this.fb.group({\n      firstName: ['', [Validators.required, Validators.minLength(2)]],\n      lastName: [''],\n      email: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')]],\n      mobileNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]]\n    })\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  updateForm(){\n    this.crudApi.UpdateStudent(this.editForm.value);\n    this.toastr.success(this.editForm.controls['firstName'].value + ' updated successfully');\n    this.router.navigate(['view-students']);\n  }\n\n}","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n  <h1 class=\"h2\">Edit Student Details</h1>\n  <div class=\"btn-toolbar mb-2 mb-md-0\">\n    <div class=\"btn-group\">\n      <button class=\"btn btn-sm btn-outline-secondary\" (click)=\"goBack()\">Go Back</button>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"row\">\n  <div class=\"col-lg-12\">\n    <div class=\"pricing-header form-block mx-auto\">\n      <form [formGroup]=\"editForm\" (ngSubmit)=\"updateForm()\" novalidate>\n        <div class=\"row\">\n          <div class=\"col-lg-5 col-md-12 col-sm-12\">\n            <div class=\"row\">\n              <div class=\"col-md-12 mb-3\">\n                <label>First name</label>\n                <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" required>\n                <p *ngIf=\"firstName.touched && firstName.invalid\" class=\"error\">\n                  <sup>*</sup>Please enter firstname\n                </p>\n                <p *ngIf=\"firstName.errors?.minlength\" class=\"error\">\n                  <sup>*</sup>Name shouldn't be less than 2 words\n                </p>\n              </div>\n              <div class=\"col-md-12 mb-3\">\n                <label>Last name</label>\n                <input type=\"text\" formControlName=\"lastName\" class=\"form-control\">\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-12 mb-3\">\n                <label>Email</label>\n                <input type=\"email\" formControlName=\"email\" class=\"form-control\" required>\n                <p *ngIf=\"email.touched && email.invalid\" class=\"error\"><sup>*</sup>Please provide email</p>\n                <p *ngIf=\"email.errors?.pattern\" class=\"error\"><sup>*</sup>Please enter correct email</p>\n              </div>\n              <div class=\"col-md-12 mb-3\">\n                <label>Mobile number</label>\n                <input type=\"text\" formControlName=\"mobileNumber\" class=\"form-control\" required>\n                <p *ngIf=\"mobileNumber.touched && mobileNumber.invalid\" class=\"error\">\n                  <sup>*</sup>Please provide contact number\n                </p>\n                <p *ngIf=\"mobileNumber.errors?.pattern\" class=\"error\">\n                  <sup>*</sup>Use numbers only number\n                </p>\n              </div>\n            </div>\n            <div class=\"form-group text-right\">\n              <button type=\"submit\" class=\"btn btn-success btn-block\" [disabled]=\"!editForm.valid\">\n                Update Student\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n  <h2 class=\"h2\">Students List</h2>\n  <a routerLink=\"/register-student\" class=\"btn btn-success\" *ngIf=\"hideWhenNoStudent\">\n    Add Student\n  </a>\n</div>\n\n<div class=\"pricing-header mx-auto\">\n\n  <div class=\"no-data text-center\" *ngIf=\"preLoader\">\n    <img src=\"assets/preloader.gif\" class=\"preloader-icon\" alt=\"No student\">\n  </div>\n\n  <div class=\"no-data text-center\" *ngIf=\"noData\">\n    <img src=\"assets/no-student.svg\" class=\"nodata-msg\" alt=\"No student\">\n    <p class=\"nodata-msg\">No student added yet!</p>\n    <a routerLink=\"/register-student\" class=\"btn btn-success\">\n      Add Student\n    </a>\n  </div>\n\n  <div class=\"table-responsive\" *ngIf=\"hideWhenNoStudent\">\n    <table class=\"table table-bordered table-responsive-sm table-responsive-md table-responsive-lg\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Student Id</th>\n          <th scope=\"col\">Student name</th>\n          <th scope=\"col\">Email</th>\n          <th scope=\"col\">Mobile number</th>\n          <th class=\"text-center\" scope=\"col\">Edit</th>\n        </tr>\n      </thead>\n      <tbody>\n\n        <tr *ngFor=\"let student of Student | paginate: { itemsPerPage: 7, currentPage: p }; let i = index;\">\n          <th scope=\"row\">{{student.$key}}</th>\n          <td>{{student.firstName}} {{student.lastName}}</td>\n          <td>{{student.email}}</td>\n          <td>{{student.mobileNumber}}</td>\n          <td class=\"text-center action-block\">\n            <span class=\"mr-2 btn btn-outline-primary btn-sm\" routerLink=\"/edit-student/{{student.$key}}\">Edit</span> \n            <span class=\"btn btn-outline-danger btn-sm\" (click)=\"deleteStudent(student)\">Delete</span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <pagination-controls (pageChange)=\"p = $event\" autoHide=\"true\" responsive=\"true\"></pagination-controls>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CrudService } from '../shared/crud.service';\nimport { Student } from './../shared/student'; \nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.scss']\n})\n\nexport class StudentListComponent implements OnInit {\n  p: number = 1;\n  Student: Student[];\n  hideWhenNoStudent: boolean = false;\n  noData: boolean = false;\n  preLoader: boolean = true;\n  \n\n  constructor(\n    public crudApi: CrudService,\n    public toastr: ToastrService\n    ){ }\n\n\n  ngOnInit() {\n    this.dataState();\n    let s = this.crudApi.GetStudentsList(); \n    s.snapshotChanges().subscribe(data => {\n      this.Student = [];\n      data.forEach(item => {\n        let a = item.payload.toJSON(); \n        a['$key'] = item.key;\n        this.Student.push(a as Student);\n      })\n    })\n  }\n\n  dataState() {     \n    this.crudApi.GetStudentsList().valueChanges().subscribe(data => {\n      this.preLoader = false;\n      if(data.length <= 0){\n        this.hideWhenNoStudent = false;\n        this.noData = true;\n      } else {\n        this.hideWhenNoStudent = true;\n        this.noData = false;\n      }\n    })\n  }\n\n  deleteStudent(student) {\n    if (window.confirm('Are sure you want to delete this student ?')) { \n      this.crudApi.DeleteStudent(student.$key)\n      this.toastr.success(student.firstName + ' successfully deleted!');\n    }\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { CrudService } from '../shared/crud.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.scss']\n})\n\nexport class AddStudentComponent implements OnInit {\n  public studentForm: FormGroup;\n \n  constructor(\n    public crudApi: CrudService,\n    public fb: FormBuilder,\n    public toastr: ToastrService\n  ) { }\n\n \n  ngOnInit() {\n    this.crudApi.GetStudentsList();\n    this.studenForm();\n  }\n\n  studenForm() {\n    this.studentForm = this.fb.group({\n      firstName: ['', [Validators.required, Validators.minLength(2)]],\n      lastName: [''],\n      email: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')]],\n      mobileNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]]\n    })  \n  }\n\n  get firstName() {\n    return this.studentForm.get('firstName');\n  }\n\n  get lastName() {\n    return this.studentForm.get('lastName');\n  }  \n\n  get email() {\n    return this.studentForm.get('email');\n  }\n\n  get mobileNumber() {\n    return this.studentForm.get('mobileNumber');\n  }\n\n  ResetForm() {\n    this.studentForm.reset();\n  }  \n \n  submitStudentData() {\n    console.log(this.studentForm.value)\n    this.crudApi.AddStudent(this.studentForm.value);\n    this.toastr.success(this.studentForm.controls['firstName'].value + ' successfully added!');\n    this.ResetForm();\n   };\n\n}","<div class=\"pt-3 pb-2 mb-3 border-bottom\">\n  <h2 class=\"h2\">Add Student</h2>\n</div>\n\n<form [formGroup]=\"studentForm\" (ngSubmit)=\"submitStudentData()\" novalidate>\n  <div class=\"row\">\n    <div class=\"col-lg-5 col-md-12 col-sm-12\">\n      <div class=\"row\">\n\n        <div class=\"col-md-12 mb-3\">\n          <label>First name</label>\n          <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" required>\n\n          <!-- errors-->\n          <p *ngIf=\"firstName.touched && firstName.invalid\" class=\"error\"><sup>*</sup>Please enter atleast first name\n          </p>\n          <p *ngIf=\"firstName.errors?.minlength\" class=\"error\"><sup>*</sup>Name shouldn't be less than 2 words</p>\n        </div>\n\n        <div class=\"col-md-12 mb-3\">\n          <label>Last name</label>\n          <input type=\"text\" formControlName=\"lastName\" class=\"form-control\">\n        </div>\n\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-12 mb-3\">\n          <label>Email</label>\n          <input type=\"email\" formControlName=\"email\" class=\"form-control\" required>\n\n          <!-- errors-->\n          <p *ngIf=\"email.touched && email.invalid\" class=\"error\"><sup>*</sup>Please provide email</p>\n          <p *ngIf=\"email.errors?.pattern\" class=\"error\"><sup>*</sup>Please enter correct email</p>\n        </div>\n\n        <div class=\"col-md-12 mb-3\">\n          <label>Mobile number</label>\n          <input type=\"text\" formControlName=\"mobileNumber\" class=\"form-control\" required>\n\n          <!-- errors-->\n          <p *ngIf=\"mobileNumber.touched && mobileNumber.invalid\" class=\"error\"><sup>*</sup>Please provide contact\n            number</p>\n          <p *ngIf=\"mobileNumber.errors?.pattern\" class=\"error\"><sup>*</sup>Use numbers only\n            number</p>\n        </div>\n\n      </div>\n\n      <div class=\"form-group text-right\">\n        <button type=\"button\" class=\"btn btn-secondary gap-right\" (click)=\"ResetForm()\">Reset</button>\n        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!studentForm.valid\">Add Student</button>\n      </div>\n\n    </div>\n  </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { Student } from '../shared/student';\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CrudService {\n  studentsRef: AngularFireList<any>;\n  studentRef: AngularFireObject<any>;\n  \n  constructor(private db: AngularFireDatabase) { }\n\n  // Create Student\n  AddStudent(student: Student) {\n    this.studentsRef.push({\n      firstName: student.firstName,\n      lastName: student.lastName,\n      email: student.email,\n      mobileNumber: student.mobileNumber\n    })\n  }\n\n  // Fetch Single Student Object\n  GetStudent(id: string) {\n    this.studentRef = this.db.object('students-list/' + id);\n    return this.studentRef;\n  }\n\n  // Fetch Students List\n  GetStudentsList() {\n    this.studentsRef = this.db.list('students-list');\n    return this.studentsRef;\n  }  \n\n  // Update Student Object\n  UpdateStudent(student: Student) {\n    this.studentRef.update({\n      firstName: student.firstName,\n      lastName: student.lastName,\n      email: student.email,\n      mobileNumber: student.mobileNumber\n    })\n  }  \n\n  // Delete Student Object\n  DeleteStudent(id: string) { \n    this.studentRef = this.db.object('students-list/'+id);\n    this.studentRef.remove();\n  }\n  \n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AddStudentComponent } from './add-student/add-student.component';\nimport { StudentListComponent } from './student-list/student-list.component';\nimport { EditStudentComponent } from './edit-student/edit-student.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/register-student', pathMatch: 'full' },\n  { path: 'register-student', component: AddStudentComponent },\n  { path: 'view-students', component: StudentListComponent },\n  { path: 'edit-student/:id', component: EditStudentComponent }\n];\n\n@NgModule({\n  imports: [CommonModule,RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  declarations: []\n})\n\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}